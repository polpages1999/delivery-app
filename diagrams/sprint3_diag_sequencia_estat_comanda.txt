@startuml
actor Client_and_Botiguer
boundary estat_comanda 
control control_estat 
entity Transportista
actor GPS
actor Reemborsament 
Client_and_Botiguer -> estat_comanda: peticio_estat_comanda_seleccionada()
activate estat_comanda
estat_comanda -> control_estat: estat_preparaciÃ³_comanda()
activate control_estat
alt Producte no disponible

   control_estat -> Client_and_Botiguer: "Error: No es pot fer estat d'un producte no disponible"

end  
alt Comanda inexistent
  control_estat -> Client_and_Botiguer: "Error: No es pot preparar una comanda inexistent i/o no disponible"
end
control_estat --> estat_comanda: <<return>>
deactivate control_estat
estat_comanda -> Client_and_Botiguer : Estat_preparat()
deactivate estat_comanda

Client_and_Botiguer -> control_estat: Estat_comanda(c)
activate control_estat
control_estat -> Transportista: enviament_comanda()
activate Transportista
control_estat -> Transportista: visualitzacio_estat()
Transportista --> control_estat: <<return>>
deactivate Transportista
control_estat -> Client_and_Botiguer: visualtizacio_estat()
control_estat -> Client_and_Botiguer: producte_rebut()
deactivate control_estat

Transportista -> GPS: busca_ruta_optima()
activate GPS
GPS --> Transportista: <<return>>
deactivate GPS

alt Comanda equivocada i/o defectuosa
    Client_and_Botiguer -> control_estat: solicitud_reemborsament()
    activate control_estat
    control_estat -> Reemborsament: comproba_producte()
    alt Reemborsament concebut
       Reemborsament -> control_estat: producte_reemborsat()
       control_estat -> Client_and_Botiguer: entrega_producte_reemborsat()
    deactivate control_estat
    else Reemborsament rebutjat
       Reemborsament -> Client_and_Botiguer: "Ho sentim, el reemborsament ha sigut rebutjat"
    end
end
alt Vol valorar?
   Client_and_Botiguer --> control_estat: envia_valoracio()
end
@enduml